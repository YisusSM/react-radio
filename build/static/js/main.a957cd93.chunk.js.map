{"version":3,"sources":["assets/0.gif","assets/1.gif","assets/2.gif","assets/3.gif","assets/4.gif","assets/5.gif","assets/6.gif","components/Slidebar.js","types/types.js","actions/ui.js","components/AudioNav.js","firebase/firebaseConfig.js","components/chat/GifsChat/Gif.js","components/chat/HelpCommands.js","components/chat/ChatRoom.js","actions/messages.js","helpers/auth.js","actions/auth.js","components/chat/chatHelpers.js/helper.js","components/chat/firebase.js","components/chat/Chat.js","hooks/useForm.js","helpers/axios.js","actions/radio.js","components/Navbar.js","components/RadioScreen.js","FullScreen.js","reducers/auth.js","reducers/messagesReducer.js","reducers/radioReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","RadioApp.js","index.js"],"names":["module","exports","Sliderbar","styled","input","attrs","type","props","value","types","showError","err","payload","AudioNav","useSelector","state","radio","name","author","listeners","Fullscreen","ui","useState","loading","setLoading","btnPlay","setBtnPlay","setValue","src","setSrc","audioElement","useRef","dispatch","useDispatch","togglPlayPause","console","log","current","play","setTimeout","pause","className","id","onClick","ref","onChange","e","target","volume","handleVolumenChange","width","height","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","getGif","key","a","url","fetch","resp","json","data","gif","map","img","title","images","downsized_small","mp4","Gif","HelpCommands","ChatRoom","messageList","msg","error","help","useEffect","q","query","collection","orderBy","limit","onSnapshot","snapshot","forEach","item","messages","message","createdAt","admin","style","color","fontSize","login","email","password","signInWithEmailAndPassword","then","userCredential","user","displayName","where","uid","getDocs","p","doc","verified","emailVerified","catch","errorMessage","logOut","signOut","commands","displayname","words","split","now","Date","createUserWithEmailAndPassword","languageCode","updateProfile","currentUser","photoURL","sendEmailVerification","addDoc","verifyInput","isGif","insertMessageFirebase","replace","length","Chat","chat","initialState","values","setValues","reset","handleInputChange","useForm","formValue","handleFormValueChange","onSubmit","preventDefault","placeholder","autoComplete","padding","transition","getDataSong","axios","get","res","radioStartGetInfo","radioGetInfo","Navbar","background","handleChatVisibility","handleBackground","number","Math","floor","random","RadioScreen","image","background0","background1","background2","background3","background4","background5","background6","setInterval","alt","FullScreen","elem","document","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","exitFullscreen","webkitExitFullscreen","msExitFullscreen","historySong","rootReducer","combineReducers","action","current_track","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","RadioApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a957cd93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.28e65fd9.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.8400ed0c.gif\";","module.exports = __webpack_public_path__ + \"static/media/2.63e456d6.gif\";","module.exports = __webpack_public_path__ + \"static/media/3.975fff62.gif\";","module.exports = __webpack_public_path__ + \"static/media/4.303295a3.gif\";","module.exports = __webpack_public_path__ + \"static/media/5.cd23183b.gif\";","module.exports = __webpack_public_path__ + \"static/media/6.ba4e5f6c.gif\";","import styled from 'styled-components'\r\n\r\nexport const Sliderbar = styled.input.attrs({ type: 'range' })`\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  outline: 0;\r\n  height: 2px;\r\n  border-radius: 40px;\r\n  background: ${(props) =>\r\n        `linear-gradient(to right, #fff 0%, #fff ${props.value}%, #292828 ${props.value}%, #292828 100%);`};\r\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);\r\n\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    background-color: #fff;\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  ::-moz-range-thumb {\r\n    -webkit-appearance: none;\r\n    background-color: #fff;\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","//objeto para centralizar todos los tipos de acciones\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    uiOpenFullscreen: '[ui] Open Fullscreen',\r\n    uiExitFullscreen: '[ui] Exit Fullscreen',\r\n    uiChangeBackground: '[ui] Change Background',\r\n    uiChangeVisibilityChat:'[ui] Change Visibility Chat',\r\n    uiChangeVisibilityHelp:'[ui] Change Visibility Help',\r\n    uiChangeVisibilityGifMode:'[ui] Change Visibility Gif',\r\n    uiShowError:'[ui] Show Error',\r\n\r\n    radioGetInfo: '[radio] get information',\r\n    messageLoad:'[messages] Messages Load',\r\n    clearMessages:'[messages] Clear All Messages',\r\n\r\n    eventAddNew: '[event] Add New',\r\n    eventLogout: '[event] Clean Events',\r\n    eventStartAddNew: '[event] Start Add New ',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdate: '[event] Event Updated',\r\n    eventDelete: '[event] Event Deleted',\r\n    eventLoaded: '[event] Event Loaded',\r\n\r\n\r\n    authChecking: '[auth] Checking Login State',\r\n    authCheckingFinish: '[auth] Finish Checking Login State',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Loign',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartJWTRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from '../types/types';\r\n\r\nexport const uiOpenFullscreen = () => ({\r\n    type: types.uiOpenFullscreen\r\n\r\n})\r\nexport const uiExitFullscreen = () => ({\r\n    type: types.uiExitFullscreen\r\n\r\n}) \r\n\r\nexport const changeBackground = (image)=>({\r\n    type:types.uiChangeBackground,\r\n    payload:image\r\n})\r\n\r\nexport const uiChangeVisibilityChat = (mode) => ({\r\n    type: types.uiChangeVisibilityChat,\r\n    payload:mode\r\n\r\n}) \r\nexport const uiChangeVisibilityHelp = (mode)=>({\r\n    type: types.uiChangeVisibilityHelp,\r\n    payload:mode\r\n})\r\nexport const uiChangeVisibilityGifMode = (mode)=>({\r\n    type: types.uiChangeVisibilityHelp,\r\n    payload:mode\r\n})\r\n\r\nexport const showError=(err)=>({\r\n    type:types.uiShowError,\r\n    payload:err\r\n})","import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Sliderbar } from './Slidebar';\r\nimport '../components/index.css';\r\nimport { uiExitFullscreen, uiOpenFullscreen } from '../actions/ui';\r\n\r\n\r\n\r\nexport const AudioNav = () => {\r\n    const { name, author, listeners } = useSelector(state => state.radio)\r\n    const { Fullscreen } = useSelector(state => state.ui)\r\n    const [loading, setLoading] = useState(false);\r\n    const [btnPlay, setBtnPlay] = useState(true)\r\n    const [value, setValue] = useState(100);\r\n    const [src, setSrc] = useState(null);\r\n    const audioElement = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const togglPlayPause = () => {\r\n        if (btnPlay) {\r\n            setLoading(true);\r\n            if (src === 'http://189.176.252.227:2000/listen') {\r\n                setSrc('http://189.176.252.227:2000/listen')\r\n                console.log(audioElement);\r\n                audioElement.current.play();\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 8500);\r\n            } else {\r\n                setLoading(true);\r\n                setSrc('http://189.176.252.227:2000/listen');\r\n                setTimeout(() => {\r\n                    audioElement.current.play();\r\n                }, 0.5);\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                }, 8000);\r\n\r\n            }\r\n            // time(!btnPlay);\r\n        }\r\n        else {\r\n            console.log(btnPlay, 'pause')\r\n            audioElement.current.pause();\r\n            audioElement.current.src = null;\r\n        }\r\n        setBtnPlay(!btnPlay);\r\n    }\r\n    const openFullscreen = () => {\r\n        dispatch(uiOpenFullscreen())\r\n    }\r\n    const exitFullscreen = () => {\r\n        dispatch(uiExitFullscreen())\r\n    }\r\n\r\n    // const resumeRadio = () => {\r\n    //     audioElement.current.currentTime += cont + 1;\r\n    //     clearInterval(temp);\r\n    //     cont = 0;\r\n    //     togglPlayPause();\r\n    // }\r\n\r\n\r\n    const handleVolumenChange = (e) => {\r\n\r\n        audioElement.current.volume = e;\r\n    }\r\n\r\n    return (\r\n        <div className='radio-footer__info'>\r\n            <div className=\"radio-footer__info-favorite\">\r\n                <i className=\"bi bi-star svgIcon\"></i>\r\n            </div>\r\n            <div className='radio-footer__info-song SuiTypography-Body1'>\r\n                <label>{name}<br />{author === 'BUG BUNNY' ?\r\n                    <span className=\"bugbunny\">{author}</span> : <span >{author}</span>}</label>\r\n            </div>\r\n            <div className=\"radio-footer__info-listeners\">\r\n                <label>Listeners: {listeners}</label>\r\n            </div>\r\n            <div className='radio-footer__info-playbtn'>\r\n                {(loading ? <div className=\"loader\" id=\"loader\"></div> : null)}\r\n                {btnPlay ? <i className=\"bi bi-play-fill btnPlay svgIcon\" onClick={togglPlayPause}></i> : <i className=\"bi bi-pause-fill btnPlay svgIcon\" onClick={togglPlayPause}></i>}\r\n                {/* <label onClick={resumeRadio}>Live</label> */}\r\n            </div>\r\n            <div className='radio-footer__info-volume'>\r\n                <audio ref={audioElement} src={src} ></audio>\r\n                {value > 60 ?\r\n                    <i className=\"bi bi-volume-up-fill svgIcon\"></i>\r\n                    :\r\n                    value > 30 ?\r\n                        <i className=\"bi bi-volume-down-fill svgIcon\"></i> :\r\n                        <i className=\"bi bi-volume-off-fill svgIcon\"></i>\r\n                }\r\n            </div>\r\n            <div className=\"radio-footer__info-volume-slider\">\r\n                <Sliderbar value={value} onChange={e => {\r\n                    setValue(e.target.value);\r\n                    handleVolumenChange(e.target.value / 100);\r\n                }} />\r\n            </div>\r\n            <div className='radio-footer__info-access'>\r\n                {!Fullscreen ? <i className=\"bi bi-fullscreen svgIcon\" onClick={openFullscreen}></i> : <i className=\"bi bi-fullscreen-exit svgIcon\" width=\"100px\" height=\"100px\" onClick={exitFullscreen} ></i>}\r\n            </div>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCbZJY2nDiCPTRsv0yoGtS3I17NVD5JmSM\",\r\n    authDomain: \"radio-6035c.firebaseapp.com\",\r\n    projectId: \"radio-6035c\",\r\n    storageBucket: \"radio-6035c.appspot.com\",\r\n    messagingSenderId: \"584821453886\",\r\n    appId: \"1:584821453886:web:e148ed9d9812ebed064d6f\",\r\n    measurementId: \"G-54T7T3YZV8\"\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth();","import React from 'react';\r\n\r\n\r\nexport const getGif= async(key)=>{\r\n   const url= `https://api.giphy.com/v1/gifs/search?q=${key}&rating=PG&limit=1&api_key=DnKhsHbOOyW15hQ77467vSt21jCNVenP`;\r\n   const resp = await fetch(url);\r\n   const {data} = await resp.json();\r\n\r\n   const gif = data.map(img=>{\r\n       return {\r\n           id:img.id,\r\n           title:img.title,\r\n           url:img.images?.downsized_small.mp4\r\n\r\n       }\r\n   })\r\n   console.log(gif);\r\n}\r\n\r\nexport const Gif = (props) => {\r\n    console.log(props);\r\n  return <div>\r\n      \r\n  </div>;\r\n};\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nexport const HelpCommands = () => {\r\n    const mensaje = \"/login <email>  <password>\"\r\n    return <>\r\n        <ul className='card'>\r\n            <li>\r\n                {mensaje}\r\n            </li>\r\n        </ul>\r\n\r\n    </>;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { db } from '../../firebase/firebaseConfig';\r\nimport { onSnapshot } from \"firebase/firestore\";\r\nimport { collection } from \"firebase/firestore\";\r\nimport { query, orderBy, limit } from \"firebase/firestore\";\r\nimport '../index.css';\r\nimport './index.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearMessages, loadMessages } from '../../actions/messages';\r\nimport { Gif } from './GifsChat/Gif';\r\nimport { HelpCommands } from './HelpCommands';\r\n\r\nexport const ChatRoom = () => {\r\n\r\n\r\n    let messageList;\r\n    const dispatch = useDispatch();\r\n    const { state } = useSelector(state => state.msg)\r\n    const { error, help } = useSelector(state => state.ui)\r\n\r\n    useEffect(() => {\r\n\r\n        const q = query(collection(db, 'room'), orderBy('createdAt', 'desc'), limit(50));\r\n        onSnapshot(q, (snapshot => {\r\n            dispatch(clearMessages());\r\n            snapshot.forEach(item => {\r\n\r\n                dispatch(loadMessages({\r\n                    id: item.id,\r\n                    message: item.data().message,\r\n                    createdAt: item.data().createdAt,\r\n                    author: item.data().author,\r\n                    admin: item.data().admin\r\n                }))\r\n\r\n            })\r\n        }))\r\n\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    messageList = (state ? state.map(state => {\r\n        // return (!state.admin ? <li className=\"message\" key={state.id}\r\n        // ><span style={{ color: 'grey' }}>{state.author}</span> {state.message}</li> :\r\n        //     <li className=\"message\" key={state.id}\r\n        //     ><span style={{ color: 'grey' }}>{state.author} <span\r\n        //         style={{\r\n        //             fontSize: 10,\r\n        //             color: 'red'\r\n        //         }}>[MOD]</span></span> {state.message}</li>)\r\n        return (state.gif ? <Gif\r\n            key={state.id}\r\n            img={state.img}\r\n        /> : !state.admin ? <li\r\n            className=\"message\"\r\n            key={state.id}><span\r\n                style={{ color: 'grey' }}>{state.author}</span> {state.message}</li> : <li className=\"message\" key={state.id}><span style={{ color: 'grey' }}>{state.author} <span\r\n                    style={{\r\n                        fontSize: 10,\r\n                        color: 'red'\r\n                    }}>[MOD]</span></span> {state.message}</li>)\r\n    }) : null)\r\n\r\n    // return (state.gif ? <Gif\r\n    //     key={state.id}\r\n    //     img={state.img}\r\n    // /> : !state.admin ? <li\r\n    //     className=\"message\"\r\n    //     key={state.id}><span\r\n    //         style={{ color: 'grey' }}>{state.author}</span> {state.message}</li> : <li className=\"message\" key={state.id}><span style={{ color: 'grey' }}>{state.author} <span\r\n    //         style={{\r\n    //             fontSize: 10,\r\n    //             color: 'red'\r\n    //         }}>[MOD]</span></span> {state.message}</li>)\r\n    return (\r\n     \r\n            <ul className=\"chat-container__messages-list\">\r\n                {messageList}\r\n                {(error ? <li className=\"message\">{error}</li> : null)}\r\n                {(help ? <HelpCommands /> : null)}\r\n            </ul>\r\n     \r\n\r\n    )\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const loadMessages=(messages)=>({\r\n    type:types.messageLoad,\r\n    payload:messages\r\n})\r\nexport const clearMessages=()=>({\r\n    type:types.clearMessages\r\n})","import { auth, db } from \"../firebase/firebaseConfig\";\r\nimport { createUserWithEmailAndPassword, sendEmailVerification, signInWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { collection, addDoc, where, query, getDocs } from \"firebase/firestore\";\r\nimport { showError } from \"../actions/ui\";\r\nimport { authLogOut, loginUser } from \"../actions/auth\";\r\n\r\n\r\nexport const registerWithEmailAndPassword = (email, password, name) => {\r\n    return (dispatch) => {\r\n        const now = new Date();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                auth.languageCode = 'es';\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: name, photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n                })\r\n                sendEmailVerification(auth.currentUser)\r\n                    .then(() => {\r\n\r\n                        addDoc(collection(db, \"users\"), {\r\n                            admin: false,\r\n                            id: user.uid,\r\n                            createdAt: now,\r\n                        });\r\n\r\n                        auth.signOut();\r\n                    });\r\n\r\n            })\r\n            .catch((error) => {\r\n                // const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorMessage)\r\n                // ..\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password) => {\r\n    return (dispatch) => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                console.log('inicio sesion', user.displayName)\r\n                const q = query(collection(db, \"users\"), where(\"id\", \"==\", user.uid));\r\n\r\n                 getDocs(q).then(p => {\r\n                    p.forEach((doc) => {\r\n                        // doc.data() is never undefined for query doc snapshots\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        dispatch(showError(''));\r\n                        dispatch(loginUser(user.uid, user.displayName, user.emailVerified,doc.data().admin))\r\n                    })\r\n                }\r\n\r\n                )\r\n\r\n\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                //   const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorMessage)\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch) => {\r\n        auth.signOut();\r\n        dispatch(authLogOut())\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const loginUser = (uid, displayName,verified,admin) => ({\r\n    type: types.authLogin,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n        verified,\r\n        admin\r\n    }\r\n})\r\nexport const authLogOut = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\n\r\n","import { login, logOut, registerWithEmailAndPassword } from '../../../helpers/auth';\r\nimport { insertMessageFirebase } from '../firebase';\r\nimport { showError, uiChangeVisibilityGifMode } from '../../../actions/ui';\r\nimport { getGif } from '../GifsChat/Gif';\r\n\r\n\r\n\r\nexport const commands = (message, uid, verified, displayname, dispatch, admin) => {\r\n\r\n    const words = message.split(' ');\r\n\r\n    switch (words[0]) {\r\n        case '/login':\r\n            dispatch(login(words[1], words[2]));\r\n            break;\r\n        case '/register':\r\n            dispatch(registerWithEmailAndPassword(words[2], words[3], words[1]));\r\n            break;\r\n        case '/out':\r\n            dispatch(logOut())\r\n            break;\r\n        case '/giphy':\r\n            if (uid) {\r\n                if (verified) {\r\n                    if (verifyInput(message)) {\r\n                        console.log(words, 'desde /giphy');\r\n                        getGif(words[1]);\r\n                        dispatch(uiChangeVisibilityGifMode(true));\r\n                        //dispatch(insertMessageFirebase(message, displayname, admin))\r\n                    } else console.log('mensaje vacio');\r\n\r\n                } else console.log('verifica correo');\r\n            } else dispatch(showError('inicia sesión'))\r\n            break;\r\n        default:\r\n            if (uid) {\r\n                if (verified) {\r\n                    if (verifyInput(message)) {\r\n                        getGif();\r\n                        dispatch(insertMessageFirebase(message, displayname, admin, null, false))\r\n                    } else console.log('mensaje vacio');\r\n\r\n                } else console.log('verifica correo');\r\n            } else dispatch(showError('inicia sesión'))\r\n            break;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst verifyInput = (message) => {\r\n    const text = message.replace(/\\s+/g, '');\r\n    if (text.length > 0) {\r\n        return true\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}","import { db } from \"../../firebase/firebaseConfig\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\n\r\nexport const insertMessageFirebase = (message,displayName,admin,url,isGif) => {\r\n\r\n    return (dispatch) => {\r\n        var now = new Date();\r\n        try {\r\n            console.log(displayName,message,admin)\r\n             addDoc(collection(db, \"room\"), {\r\n                author:displayName,\r\n                message,\r\n                createdAt: now,\r\n                admin,\r\n                url,\r\n                isGif\r\n            });\r\n        } catch (e) {\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../index.css';\r\nimport { ChatRoom } from './ChatRoom';\r\nimport { commands } from './chatHelpers.js/helper';\r\nimport { uiChangeVisibilityHelp } from '../../actions/ui';\r\n\r\n\r\nexport const Chat = () => {\r\n    const dispatch = useDispatch()\r\n    const { chat, help } = useSelector(state => state.ui);\r\n    const auth = useSelector(state => state.auth);\r\n    const [formValue, handleFormValueChange, reset] = useForm({\r\n        message: '',\r\n        gif: false\r\n    });\r\n    const { message } = formValue;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        commands(message, auth.uid, auth.verified, auth.displayName, dispatch, auth.admin);\r\n        reset();\r\n    }\r\n    const handleHelpVisibility = () => {\r\n        dispatch(uiChangeVisibilityHelp(!help));\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={`chat-container ${!chat ? \"hidden\" : \"\"}`}>\r\n                <div className=\"chat-container__toolbar\">\r\n                    <h6 className=\"chat-container__toolbar-title\">CHAT</h6>\r\n                </div>\r\n                <div className=\"chat-container-scroll-to-bottom\">\r\n                <div className=\"chat-container__messages\">\r\n                    <ChatRoom />\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-container__textbox-title\">\r\n                <h6><span className=\"chat-container__textbox-title-arrow\">→</span> RADIO GIT:(<span className=\"chat-container__textbox-title-span-color\">MAIN</span>)</h6>\r\n            </div>\r\n            <div className=\"chat-container__text-area\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input placeholder=\"Commit here...\"\r\n                        name=\"message\"\r\n                        onChange={handleFormValueChange}\r\n                        autoComplete='off'\r\n                        value={message}></input>\r\n                    <i className=\"bi bi-question-circle svgIcon help\" onClick={handleHelpVisibility} ></i>\r\n                    <button><i className=\"bi bi-send-fill\" style={{\r\n                        color:'white',\r\n                        fontSize:'1.6rem',\r\n                        padding:'8px',\r\n                        transition:'.2s'\r\n                    }} id=\"send-button\"></i></button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n        </div >\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import axios from \"axios\";\r\n\r\nexport const getDataSong = async ()=>{\r\n    const res = await axios.get('http://189.176.252.227:2000/status');\r\n    return res;\r\n}\r\n\r\n","import { getDataSong } from '../helpers/axios';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const  radioStartGetInfo = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await getDataSong();\r\n            dispatch(radioGetInfo(data.data));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nconst radioGetInfo = (data) => ({\r\n    type: types.radioGetInfo,\r\n    payload: data\r\n});","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeBackground, uiChangeVisibilityChat } from '../actions/ui';\r\nimport './index.css';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { background, chat } = useSelector(state => state.ui)\r\n\r\n    const handleBackground = () => {\r\n        var number = Math.floor(Math.random() * (7 - 0)) + 0;\r\n        if (number !== background) {\r\n            dispatch(changeBackground(number));\r\n        } else { handleBackground() }\r\n    }\r\n\r\n    const handleChatVisibility=()=>{\r\n        dispatch(uiChangeVisibilityChat(!chat));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"radio-navbar\">\r\n                <i className=\"bi bi-broadcast svgIcon\"></i>\r\n                <div className=\"radio-navbar-icons-container\">\r\n                    <div className=\"radio-navbar-icons-container_icon\">\r\n                        <i className=\"bi bi-image svgIcon\" onClick={handleBackground}></i>\r\n                        {chat ? <i className=\"bi bi-chat-left svgIcon\" onClick = {handleChatVisibility}></i> : <i className=\"bi bi-chat-left-text svgIcon\" onClick = {handleChatVisibility}></i>}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { AudioNav } from './AudioNav';\r\nimport { Chat } from './chat/Chat';\r\n\r\nimport background0 from '../assets/0.gif'\r\nimport background1 from '../assets/1.gif'\r\nimport background2 from '../assets/2.gif'\r\nimport background3 from '../assets/3.gif'\r\nimport background4 from '../assets/4.gif'\r\nimport background5 from '../assets/5.gif'\r\nimport background6 from '../assets/6.gif'\r\n\r\nimport '../components/index.css'\r\nimport { radioStartGetInfo } from '../actions/radio';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar } from './Navbar';\r\n\r\n\r\nexport const RadioScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { background } = useSelector(state => state.ui);\r\n    const image = [background0, background1, background2, background3, background4, background5, background6];\r\n    useEffect(() => {\r\n\r\n        dispatch(radioStartGetInfo());\r\n    })\r\n    setInterval(() => {\r\n        dispatch(radioStartGetInfo());\r\n    }, 4000);\r\n\r\n\r\n    return (\r\n        <>\r\n            <img className='jDvIgD' src={image[background]} alt=\"Mario\" />\r\n\r\n            <Navbar />\r\n\r\n            <Chat />\r\n\r\n            <div className='radio-footer'>\r\n\r\n                <AudioNav />\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RadioScreen } from './components/RadioScreen';\r\n\r\n\r\nexport const FullScreen = () => {\r\n    const { Fullscreen } = useSelector(state => state.ui);\r\n    const elem = document.documentElement;\r\n    if (Fullscreen) {\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) { /* IE11 */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n        if ((document.fullscreenElement ||\r\n            document.webkitFullscreenElement ||\r\n            document.mozFullScreenElement) && !Fullscreen) {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) { /* Safari */\r\n                document.webkitExitFullscreen();\r\n            } else if (document.msExitFullscreen) { /* IE11 */\r\n                document.msExitFullscreen();\r\n            }\r\n        }\r\n    \r\n    return (\r\n        <>\r\n            <RadioScreen />\r\n        </>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    uid:'',\r\n    displayName:'',\r\n    verified:false,\r\n    admin:false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                uid:action.payload.uid,\r\n                displayName:action.payload.displayName,\r\n                verified:action.payload.verified,\r\n                admin:action.payload.admin\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                uid:'',\r\n                displayName:'',\r\n                verified:false,\r\n                admin:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    state:[]\r\n}\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.messageLoad:\r\n            return {\r\n                state: [action.payload,...state.state]\r\n            }\r\n\r\n        case types.clearMessages:\r\n            return{\r\n                state:[]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    name: 'feliz',\r\n    author: 'cumple',\r\n    historySong: [],\r\n    listeners: 0\r\n}\r\n\r\nexport const radioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.radioGetInfo:\r\n            return {\r\n                ...state,\r\n                name: action.payload.current_track.name,\r\n                author: action.payload.current_track.author,\r\n                listeners: action.payload.listeners\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    chat: true,\r\n    Fullscreen: false,\r\n    background: 0,\r\n    help: false,\r\n    error: '',\r\n    gif:false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenFullscreen:\r\n            return {\r\n                ...state,\r\n                Fullscreen: true\r\n            }\r\n\r\n        case types.uiExitFullscreen:\r\n            return {\r\n                ...state,\r\n                Fullscreen: false\r\n            }\r\n\r\n        case types.uiChangeBackground:\r\n            return {\r\n                ...state,\r\n                background: action.payload\r\n            }\r\n        case types.uiChangeVisibilityChat:\r\n            return {\r\n                ...state,\r\n                chat: action.payload\r\n            }\r\n        case types.uiShowError:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case types.uiChangeVisibilityHelp:\r\n            return {\r\n                ...state,\r\n                help: action.payload\r\n            }\r\n        case types.uiChangeVisibilityGifMode:\r\n            return {\r\n                ...state,\r\n                gif: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./auth\";\r\nimport { messagesReducer } from \"./messagesReducer\";\r\nimport { radioReducer } from \"./radioReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    radio: radioReducer,\r\n    ui: uiReducer,\r\n    msg: messagesReducer,\r\n    auth:authReducer\r\n\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = \r\n(process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk),\r\n\r\n    ),\r\n\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { FullScreen } from './FullScreen';\r\nimport {store} from './store/store';\r\n\r\nexport const RadioApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <FullScreen/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RadioApp } from './RadioApp';\n\n\n\nReactDOM.render(\n    <RadioApp />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}